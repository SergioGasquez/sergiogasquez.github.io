<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Embedded Software | Sergio Gasquez</title>
    <link>https://sergiogasquez.github.io/tag/embedded-software/</link>
      <atom:link href="https://sergiogasquez.github.io/tag/embedded-software/index.xml" rel="self" type="application/rss+xml" />
    <description>Embedded Software</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Thu, 10 Oct 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://sergiogasquez.github.io/images/icon_hu9a008880073e345ba742f82ec19c27ac_354710_512x512_fill_lanczos_center_2.png</url>
      <title>Embedded Software</title>
      <link>https://sergiogasquez.github.io/tag/embedded-software/</link>
    </image>
    
    <item>
      <title>Watering System</title>
      <link>https://sergiogasquez.github.io/project/monitoring-and-watering-system/</link>
      <pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://sergiogasquez.github.io/project/monitoring-and-watering-system/</guid>
      <description>&lt;p&gt;Monitoring and watering system, that can be used for domestic use or in large systems, has been developed. The system is based on the CC3200 (ARM), which uses FreeRTOS, 3 sensors interfaces have been developed (soil moisture, temperature and humidity ratio and water level) as well as a way to water the plant via a water pump powered by an external battery and controlled by a relay. A PC application has also been developed consisting of a graphic user interface, where the user can visualize the sensors data, both the latest measure as well as a graphic containing the history of the variable. The user interface also allows to water the plan in two ways, normal watering or fixing a temperature and soil moisture threshold, if those thresholds are surpassed the plant will water by itself. Data is also stored in a file at the computer in CSV format, just in case, any further processing is needed. The communication between PC and microcontroller is wireless and done via Wi-Fi, using MQTT, which makes scaling the project very easy thanks to the publish-subscribe method. Besides, a website has been developed in order to be able to access the data and interact with the system even when not in the same Wi-Fi network.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data Acquisition System</title>
      <link>https://sergiogasquez.github.io/project/daq/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://sergiogasquez.github.io/project/daq/</guid>
      <description>&lt;p&gt;Data Acquisition System based on Arduino Mega 2560 will be developed. The system has 12 channels, half of them of the range [0,5] V and the rest of the range of [-15,+15] V. The resolution, in most of the channels, is 16 bits, whereas in some channels, only 4 of 12, is
10 bits. The system will save the data in an SD card and send it, via GPRS, to a website developed to visualize the data in real time. The system can be configured to choose which channels will be on and off. It has a real time clock to keep track of the time and date when the measure was made, an LCD display to show which task the system is performing and an SMU that will allow the system to measure currents. The system is completely portable and can function on its own in an autonomous way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Autonomous Mobile Robot</title>
      <link>https://sergiogasquez.github.io/project/autonomous-mobile-robot/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      <guid>https://sergiogasquez.github.io/project/autonomous-mobile-robot/</guid>
      <description>&lt;p&gt;Project similar to MIT duckie town where the robot has to drive through the city in an autonomous way taking into account lanes directions and stop signs. The developed planning algorithm was A*, odometry implements Euler integration while control manages to drive the robot through the path generated by A*.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
